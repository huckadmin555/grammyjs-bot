/* bot.command(['hello', 'hi', 'hi_bot'], async (ctx) => {
    await ctx.reply('–ü—Ä–∏–≤–µ—Ç –∫–∞–∫ –ø–æ–∂–∏–≤–∞–µ—à—å ? üòä')
}) */

/* bot.on('msg').filter((ctx) => {
    return ctx.from.id === 255666990
}, async (ctx) => {
    await ctx.reply('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, –í–ª–∞–¥–∏—Å–ª–∞–≤!')
}) */

/* bot.on('::url', async (ctx) => {
    await ctx.reply('–ü–æ–ª—É—á–∏–ª —Å—Å—ã–ª–∫—É')
}) */

/* bot.on(['::url', ':media'], async (ctx) => {
    await ctx.reply('–ü–æ–ª—É—á–∏–ª —Å—Å—ã–ª–∫—É')
}) */

/* bot.on('message', async (ctx) => {
    await ctx.reply('–ù–∞–¥–æ –ø–æ–¥—É–º–∞—Ç—å...')
}) */

/* bot.on('msg', async (ctx) => {
    console.log(ctx.msg);
}) */

/* bot.command('share', async (ctx) => {
    const shareKeyboard = new Keyboard().requestLocation('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è').requestContact('–ö–æ–Ω—Ç–∞–∫—Ç').requestPoll('–û–ø—Ä–æ—Å').placeholder('–ë—Ä–∞—Ç–æ–∫ —á–µ –∫–∞–∫–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç—ã, –¥–∞–Ω–Ω—ã–µ –µ—Å—Ç—å ?').resized().oneTime()

    await ctx.reply('—á–µ–º —Ö–æ—á–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è ?', {
        reply_markup: shareKeyboard
    })
}); */